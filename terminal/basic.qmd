---
title: Introduction to the Shell and Terminal
---


## Introduction

Def: The **shell** is a program (interpreter) that takes the commands you type and passes them to the operating system for execution.  

Def: The **terminal** is the interface the user interacts with. This is where you type the commands for the shell.


Common Shells include:

    - Bourn Again Shell (bash - linux distros, macOS)
    - z-shell (zsh - linux distros, macOS)
    - powershell (windows)
    - gitbash (windows)


## Controls 
These are basic controls that are useful for using the terminal.


`up` - show previous command

`down` - show next command

`tab` - autocomplete

`ctrl + l` - clear 

`ctrl + c` - cancel

`ctrl + r` - search

`ctrl + d` - close the terminal

`ctrl + a` - jump to the beginning of the line

`ctrl + e` - jump to the end of the line

`alt + [left arrow key/right arrow key]` - move the cursor left/right by the word


## Some Basic Commands

A set of basic commands for your reference. Complete usage is not illustrated.

`sudo` - use when you need superuser privelages (short for superuser do) 

`pwd` - print working directory

`mkdir [new directory name]` - create a new directory

`touch [new file name]` - create a file

`ls` - list the contents of the a directory

`cd [destination]` - change the directory

`man [command]` - show the manual for a command 

`rm [filename]` - remove a file

`rmdir [directory name]` - remove a directory

### Example

This example illustrates some usage of the commands above.

```sh
cd ~                # navigate to the home directory
mkdir example-1     # create a directory named example-1
cd example-1        # navigate into the directory named example-1
pwd                 # print the current working directory just to see 
touch new-file.txt  # create a file named new-file.txt
touch .secret-file  # create a file that starts with a .
ls                  # list out the files in the current directory
ls -a               # list all the files (including hidden ones)
ls -alh             # list the files, include details about each one, in a human readable format
cd ..               # go up one directory
rm -rf example-1    # remove the folder your created and everything in it 
```


## More Commands

A set of more commands for your reference. Complete usage is not illustrated.

`cat [filename]` - returns the contents of the file

`more [filename]` - allows you to view the contents in a paginated manner

`echo [a message]` - returns the message 

`cp [source] [destination]` - copies a file from the source to a destination

`mv [source] [destination]` - moves a file from the source to a destination

`history` - see the history of previous commands that were typed

`clear` - clears what is displayed in the terminal

`wget [url]` - downloads the contents at the url

### Example

The following is an an example of using some of the commands above.

```sh
cd ~                                                    # navigate home
mkdir books                                             # create a directory called books
cd books
echo "Let's download a book"                            # produce a message
wget https://www.gutenberg.org/cache/epub/98/pg98.txt   # download "A Tale of Two Cities"
ls                                                      # list the files
mv pg98.txt a-tale-of-two-cities.txt                    # rename the book
more a-tale-of-two-cities.txt                           # read the book
```


### Reference

[A Tale of Two Cities](https://www.gutenberg.org/cache/epub/98/pg98.txt){target="_blank"}

<a href="cnbc.txt" target="_blank">Cajun Night Before Christmas</a>

<a href="mbe.mp3" target="_blank">Meow</a>




