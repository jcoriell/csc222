---
title: "Terminal Commands"
---

## Terminal Commands


### Basic

These are basic controls that are useful for using the terminal.


`up` - show previous command
`down` - show next command
`tab` - autocomplete
`ctrl + l` - clear 
`ctrl + c` - cancel
`ctrl + r` - search
`ctrl + d` - close the terminal


man [another command] - shows manual for other commands
whoami - current user
dat - date and time
clear - also clears terminal


### Navigating the Filesystem
pwd - print working directory
ls - list contents of current directory
ls [directory name] - list contents of the directory mentioned
ls -a - list all the files, including hidden
ls -l - lists the long listing 
ls -al - combines the previous two
ls -r - reverses  the list

cd - changes the directory
cd ~ changes it to the home directory
cd [directory name] - change to the mentioned directory
cd / - changes to the root directory
cd -   - switches to the last directory

mac: open [directory]
win: start [directory]
linux: xdg-open [directory]

# Creating, Modifying, and Deleting Files
mkdir [directory path/name] - makes a directory
touch [filename] - makes a file
touch [filename] [filename] [filename] - makes multiple files
rm [filename] - removes the file
rm -i [filename] - safer, asks for a confirmation
rm -r [directory name] - removes a directory (recursively)
rm -rf [directory name] - DANGER: forcefully removes the directory and everything in it. 
rmdir [directory name] - removes the directory

cp [existing file] [new filename filepath] - copy a file
mv [existing file] [new location and name] - move (or just rename) a file

# File Content
cat [filename] - outputs the contents of a file
> [filename] - file will take input based on what you type
>> [filename] - file will take input, but not overwrite what was there
cat -n [filename] - shows linenumbers

less [filename] - shows content but with scrolling
head [filename] - shows first ten lines
head -n 5 [filename] - shows the first 5 lines with numbers 
tail [filename] - shows the last ten lines

# Text Editors
nano [filename] - opens the nano editor in the terminal
vim

echo [output] - prints the output
echo [output] > [filename] - puts the info in a file


# Tools
grep [content] [filename] - finds text in a file or folders, uses regular expressions too


touch file-{001..100}.txt - creates 100 files named file-001.txt, file-002.txt, ..., file-100.txt
find . -name "file-002.txt" find the file named that
find . -name "file-00*.txt" find the files named with 001, 002, 003, ... 009, 
find . -name "file-*.txt" -delete will delete all of the files

# Piping
a form of redirection of stuff

touch file-{001..010}.txt
find . -name "file-*" > output.txt

# Symlink
creating shortcuts

ln -s ~/Downloads dlds  - creates a symlink called dlds to the Downloads folder
rm dlds would remove the symlink

# Permissions
chmod 








touch